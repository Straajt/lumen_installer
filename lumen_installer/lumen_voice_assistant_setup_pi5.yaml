
# 🧠 Lumen Voice Assistant Setup (Home Assistant OS + Raspberry Pi 5)

Dies ist eine vollständige Anleitung, um **Lumen** als Voice Assistant mit **Wake Word**, **lokalem Intent Matching** und **ChatGPT-Integration** auf deinem Raspberry Pi 5 unter **Home Assistant OS** einzurichten – komplett ohne neue Hardware.

---

## ✅ Voraussetzungen
- Home Assistant OS auf Raspberry Pi 5
- HACS installiert
- Media Player zur Audioausgabe (z. B. `media_player.arc`)
- Mikrofon über USB oder 3,5mm-Klinke (Plug & Play)

---

## 🔁 Architekturüberblick

1. 🗣️ Du sagst: **„Hey Lumen, mach das Licht an“**
2. 🧠 `OpenWakeWord` erkennt das Wake Word lokal
3. 🧏 `Whisper` oder `Google STT` wandelt Sprache zu Text um
4. 💡 Lokale Intent-Analyse über Home Assistant Assist
5. 🤖 Optional: Weiterleitung zu ChatGPT für generative Antworten
6. 🔊 TTS über `tts.cloud_say`, `piper`, oder `polly` zurück

---

## 📦 Schritt-für-Schritt Installation

### 1. 🔊 Mikrofon testen (Add-on: Audio-Recorder)

- Installiere Add-on: `Audio Recorder` über Supervisor
- Teste, ob Sprache erkannt wird

---

### 2. 📦 OpenWakeWord + Whisper installieren (lokal)

➡️ In Home Assistant: **Einstellungen > Sprachassistent > Pipelines**

- **Wake Word aktivieren**
  - Wähle „Wyoming OpenWakeWord“
  - Wake Word: `Hey Lumen` (custom oder Standard wie „Jarvis“)

- **STT aktivieren**
  - Wähle z. B. `Whisper` (lokal) oder `Google Speech-to-Text` (schneller)

- **TTS aktivieren**
  - Z. B. `tts.cloud_say`, `piper`, `amazon_polly`

---

### 3. 🎯 Lokale Intents definieren

➡️ `configuration.yaml`:

```yaml
intent_script:
  LichtAn:
    action:
      - service: light.turn_on
        target:
          entity_id: light.livingroom_light
  LichtAus:
    action:
      - service: light.turn_off
        target:
          entity_id: light.livingroom_light
```

➡️ Dann `intents.yaml`:

```yaml
- name: LichtAn
  sentences:
    - mach das licht an
    - licht einschalten
    - lumen, ich brauche licht
- name: LichtAus
  sentences:
    - licht aus
    - mach das licht aus
```

---

### 4. 🧠 ChatGPT-Integration (optional)

➡️ Nutze REST-Command oder `OpenAI`-Integration via Custom Script:

```yaml
rest_command:
  lumen_chat:
    url: "https://api.openai.com/v1/chat/completions"
    method: POST
    headers:
      Authorization: "Bearer YOUR_API_KEY"
      Content-Type: "application/json"
    payload: >
      {
        "model": "gpt-4",
        "messages": [{"role": "user", "content": "{{ prompt }}"}]
      }
```

➡️ Danach per Skript in `scripts.yaml` nutzbar mit TTS-Antwort

---

### 5. 🗣️ Test: Wake Word & Sprache

- Sag „Hey Lumen“
- Stelle Frage oder Befehl
- Home Assistant erkennt Intent oder leitet an Lumen (ChatGPT) weiter
- Antwort kommt über `media_player.arc` zurück

---

## 🎁 Bonus: Dashboard-Schalter für Sprachmodus

```yaml
type: button
name: Sprachmodus aktiv
tap_action:
  action: call-service
  service: assist_pipeline.start
```

---

## 📌 Tipps

- Mikro-Nutzung optimieren mit `usb_audio_fix` Add-on (für Pi)
- Pipelines können zwischen lokalem und cloudbasiertem Modus wechseln
- Nutze `debug`-Modus unter "Sprachassistent", um alles zu testen

---

Fragen? Anpassen? Dein Lumen ist bereit! 😎
